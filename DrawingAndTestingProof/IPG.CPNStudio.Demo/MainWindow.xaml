<Window x:Class="IPG.CPNStudio.Demo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Diagram="clr-namespace:IPG.CPNStudio.Diagram;assembly=IPG.CPNStudio.Diagram"
        xmlns:NetworkModel="clr-namespace:IPG.CPNStudio.Demo.ViewModel"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:IPG.CPNStudio.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MainWindow"
        Width="800"
        Height="450"
        DataContext="{Binding Source={StaticResource Locator},
                              Path=Main}"
        DataContextChanged="Window_DataContextChanged"
        mc:Ignorable="d">


    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--  Merge in the resource dictionary that is shared between the main window and the overview window.  -->
                <ResourceDictionary Source="SharedVisualTemplates.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <!--  UI commands.  -->

            <RoutedUICommand x:Key="Commands.DeleteSelectedNodes" />
            <RoutedUICommand x:Key="Commands.CreateNode" />
            <RoutedUICommand x:Key="Commands.DeleteNode" />
            <RoutedUICommand x:Key="Commands.DeleteConnection" />
            <RoutedUICommand x:Key="Commands.ZoomOut" />
            <RoutedUICommand x:Key="Commands.ZoomIn" />
            <RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
            <RoutedUICommand x:Key="Commands.FitContent" />
            <RoutedUICommand x:Key="Commands.Fill" />
            <RoutedUICommand x:Key="Commands.OneHundredPercent" />



            <!--  Define the visual style for a 'ConnectorItem'.  -->
            <Style TargetType="{x:Type Diagram:ConnectorItem}">
                <!--
                    Data-binding for the connector hotspot.
                    ConnectorItem automatically computes its center points and assings this value
                    to the 'Hotspot' property.  This data-binding then 'pushes' the value into the application
                    view-model.
                -->
                <Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}" />

                <!--  The visual template.  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type Diagram:ConnectorItem}" >
                            <Border Width="20" Height="20" Background="Red" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--
                Template for the button that is used to delete nodes and connections in the graph.
                This button is displayed in an adorner when the user hovers the mouse over a node or connection.
            -->
            <ControlTemplate x:Key="deleteButtonTemplate" TargetType="{x:Type Button}">
                <Grid x:Name="grid">
                    <Grid.RenderTransform>
                        <ScaleTransform CenterX="10"
                                        CenterY="10"
                                        ScaleX="1"
                                        ScaleY="1" />
                    </Grid.RenderTransform>
                    <Ellipse x:Name="shadow"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Fill="Gray">
                        <Ellipse.RenderTransform>
                            <TranslateTransform X="1.5" Y="1.5" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                    <Ellipse x:Name="ellipse"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Fill="White"
                             Stroke="Black" />
                    <Image Margin="2" />
                </Grid>
                <ControlTemplate.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <!--
                            Make the 'delete connection button' larger when the mouse
                            cursor is hovered over it.
                        -->
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.25"
                                                 Storyboard.TargetName="grid"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1.3" />
                                <DoubleAnimation Duration="0:0:0.25"
                                                 Storyboard.TargetName="grid"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <!--
                            Return the 'delete connection button' to normal size when the mouse
                            cursor is moved away.
                        -->
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.05"
                                                 Storyboard.TargetName="grid"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 To="1" />
                                <DoubleAnimation Duration="0:0:0.05"
                                                 Storyboard.TargetName="grid"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>

            <!--
                Data-template for ConectionViewModel.
                
                Note that the 'Start' and 'End' of the arrow are bound to 'SourceConnectorHotspot' and 'DestConnectorHotspot' in
                the view-model.
                
                In this sample a curved arrow represents connections between nodes.
            -->
            <DataTemplate DataType="{x:Type NetworkModel:ConnectionViewModel}">

                <!--
                    An adorned control is used, to represent the connection.
                    When the user hovers the mouse cursor over the connection, the
                    'delete connection' adorner pops up and allows them to delete the connection.
                -->
                <Diagram:AdornedControl HorizontalAdornerPlacement="Mouse"
                                        IsMouseOverShowEnabled="{Binding ElementName=networkControl,
                                                                         Path=IsNotDragging}"
                                        VerticalAdornerPlacement="Mouse">

                    <!--  The connection is represented by a curved arrow.  -->
                    <local:CurvedArrow Fill="{StaticResource connectionBrush}"
                                       Points="{Binding Points}"
                                       Stroke="{StaticResource connectionBrush}"
                                       StrokeThickness="2" />

                
                </Diagram:AdornedControl>
            </DataTemplate>

            <!--  Define a data-template for the 'NodeViewModel' class.  -->
            <DataTemplate DataType="{x:Type NetworkModel:NodeViewModel}">

                <!--
                    An adorned control is used, to represent the node.
                    When the user hovers the mouse cursor over the node, the
                    'delete node' adorner pops up and allows them to delete the node.
                -->
                <Diagram:AdornedControl AdornerOffsetX="-12"
                                       
                                        HorizontalAdornerPlacement="Outside"
                                        IsMouseOverShowEnabled="{Binding ElementName=networkControl,
                                                                         Path=IsNotDragging}"
                                        VerticalAdornerPlacement="Outside">

                    <!--  The margin has been selected so that the selection rect nicely covers the entire node.  -->

                    <Grid MinWidth="120" MinHeight="120"
                          Margin="10,6,10,6"
                          SizeChanged="Grid_SizeChanged">

                        <!--  This rectangle is the main visual for the node.  -->

                        <Rectangle  x:Name="rect" 
                                   Stroke="{StaticResource nodeBorderBrush}"
                                   StrokeThickness="1.3" />
                        <Ellipse   x:Name="ellipse" Stroke="{StaticResource nodeBorderBrush}"
                                   StrokeThickness="1.3" />

                        <!--
                            This grid contains the node's connectors.
                            The margin is negative so that the connectors overlap the body of the node and it's selection border.
                        -->
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />

                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            
                            <!--  The name of the node.  -->
                            <TextBlock  x:Name="txtBlock"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding Name}" Visibility="Collapsed" />
                            <TextBox  x:Name="editBlock"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding Name}" Visibility="Visible" />

                            <!--  Displays the node's input connectors.  -->
                            <ItemsControl    HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                          Focusable="False"
                                          ItemTemplate="{StaticResource inputConnectorTemplate}"
                                          ItemsSource="{Binding InputConnectors}" />

                            <!--  Displays the node's output connectors.  -->
                            <ItemsControl Grid.Column="1"   HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                          Focusable="False"
                                          ItemTemplate="{StaticResource outputConnectorTemplate}"
                                          ItemsSource="{Binding OutputConnectors}" />
                        </Grid>
                    </Grid>

                    <!--<Diagram:AdornedControl.AdornerContent>

                        --><!--
                            This is the adorner that pops up when the user hovers the mouse over the node.
                            It displays a button that the user can click to delete the node.
                        --><!--
                        <Canvas x:Name="nodeAdornerCanvas"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                            <Line Stroke="Black"
                                  StrokeThickness="1"
                                  X1="0"
                                  X2="15"
                                  Y1="30"
                                  Y2="15" />
                            <Button x:Name="deleteNodeButton"
                                    Canvas.Left="10"
                                    Canvas.Top="0"
                                    Width="20"
                                    Height="20"
                                    Command="{StaticResource Commands.DeleteNode}"
                                    CommandParameter="{Binding}"
                                    Cursor="Hand"
                                    Focusable="False"
                                    Template="{StaticResource deleteButtonTemplate}" />
                        </Canvas>
                    </Diagram:AdornedControl.AdornerContent>-->
                </Diagram:AdornedControl>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsRectangle}" Value="True">
                        <Setter TargetName="rect" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ellipse" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsRectangle}" Value="False">
                        <Setter TargetName="rect" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="ellipse" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding EditMode}" Value="False">
                        <Setter TargetName="editBlock" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="txtBlock" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding EditMode}" Value="True">
                        <Setter TargetName="editBlock" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="txtBlock" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
      
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button Name="LayoutButton" Content="Layout" Width="80" Command="{Binding LayoutCommand}" Margin="5"/>
            </StackPanel>

            <Diagram:NetworkView x:Name="networkControl" Grid.Row="1"   
                                 ConnectionsSource="{Binding Path=Network.Connections}" 
                                 NodesSource="{Binding Network.NodesSource}" 
                                 MouseDown="NetworkView_MouseDown"
                                  ConnectionDragStarted="networkControl_ConnectionDragStarted"
                            QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
                            ConnectionDragging="networkControl_ConnectionDragging"                            
                            ConnectionDragCompleted="networkControl_ConnectionDragCompleted"
                            
                            />

        </Grid>
        <StackPanel Margin="10">
            <RadioButton IsChecked="{Binding NoneSelected}">
                <StackPanel Margin="5">
                     
                    <TextBlock Text="None" TextAlignment="Center" />
                </StackPanel>
            </RadioButton>
            <RadioButton IsChecked="{Binding EllipseSelected}">
                <StackPanel Margin="5">
                    <Ellipse Width="64"
                             Height="32"
                             Stroke="Black" />
                    <TextBlock Text="Ellipse" TextAlignment="Center" />
                </StackPanel>
            </RadioButton>
            <RadioButton Margin="0,10,0,0" IsChecked="{Binding RectangleSelected}">
                <StackPanel Margin="5">
                    <Rectangle Width="64"
                               Height="32"
                               Stroke="Black" />
                    <TextBlock Text="Rectangle" TextAlignment="Center" />
                </StackPanel>
            </RadioButton>
        </StackPanel>

    </Grid>
</Window>
